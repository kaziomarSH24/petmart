services:
  # 1. Laravel PHP-FPM Service
  petswap-app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: my-petswap-app
    container_name: petswap_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
      - /var/www/vendor
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=petswap-db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    networks:
      - petswap_network
    depends_on:
      - petswap-db

  # 2. NEW: Laravel Web Server (Nginx)
  backend-webserver:
    image: nginx:stable-alpine
    container_name: petswap_nginx_server
    restart: unless-stopped
    volumes:
      - ./backend:/var/www
      # The line below is the crucial fix. We are mounting the whole folder.
      - ./backend/nginx_config/:/etc/nginx/conf.d
    networks:
      - petswap_network
    depends_on:
      - petswap-app

  # 3. Database Service (MySQL)
  petswap-db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - petswap_network

  # 4. Landing Page Service (Nginx for React)
  landing-page:
    build:
      context: ./landing-page
      dockerfile: Dockerfile
    image: petswap-landing-page
    container_name: landing_page
    restart: unless-stopped
    volumes:
      - ./landing-page/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - petswap_network

  # 5. Dashboard Service (Nginx for React)
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    image: petswap-dashboard
    container_name: dashboard_app
    restart: unless-stopped
    volumes:
      - ./dashboard/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - petswap_network

  # 6. Main Nginx Reverse Proxy Service
  nginx-proxy:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: petswap-nginx-proxy
    container_name: nginx_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./certbot_www:/var/www/certbot
    networks:
      - petswap_network
    depends_on:
      - backend-webserver # Now depends on the Laravel Nginx server
      - landing-page
      - dashboard

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: petswap_phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: petswap-db
      PMA_PORT: 3306
    #   PMA_USER: mytsv_root
    #   PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PMA_ARBITRARY: 0
    networks:
      - petswap_network

# Define the custom network
networks:
  petswap_network:
    driver: bridge

# Define the persistent volume for the database
volumes:
  db_data:
    driver: local
